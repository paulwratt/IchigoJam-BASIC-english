LRUN
IchigoJam BASIC 0.8.0～
IchigoJam BASIC RPi
IchigoJam PC 0.1 beta 5～
-----------------------------------------------------------
[Function]
Load the program and execute it.

[Command format]
LRUN [<program number>]
LRUN [<program number>] [, <line number>] (1.0.0 beta 4 ~)

[Example]
LRUN 1
LRUN 3,200 (1.0.0 beta 4 ~)

[Commentary]
Programs currently loaded by IchigoJam are erased,
It is changed to the program loaded with LRUN.
Variables and arrays are initialized up to 0.9.3.
It will not be initialized after 0.9.4. Please use CLV or LET.

The value of <program number> is 0 to 2 or 0 to 3 and 100 to 227.
IchigoJam main body corresponds to 0.9.9 from 0 to 2, 1.0.0 to 0 to 3.
When omitted, it is 0 up to 0.9.8,
It becomes the program number which accessed latest from 0.9.9.
The IoT compatible version is only 1.2b59 IoT and the body is only saved to 0.
If it is omitted immediately after startup, 0 is executed.

From 0.9.3, save to external EEPROM, 100 to 227 is valid.
Valid values ​​vary depending on the EEPROM capacity and wiring.
The program number that can not be used is File Error.

EEPROM can be used with 32K to 1024K bits,
When using 1024K bits at 0.9.9 and
Contents can be completely used except some EEPROM.
For the 32K to 256K bits the same program
Please be careful to refer with multiple program numbers.
Because there is a difference in the access of I2C for EEPROM of 16K bit or less,
It can not be used for saving programs.

If there is no program in the program number (SAVE with NEW)
It will not result in an error, it will be OK display.

If you only load programs, use LOAD.

It can also be included in the program.
This allows you to navigate through multiple programs,
You can also make long programs.

<line number> can be specified from 1.0.0 beta4.
This allows execution from a specific line in the program.

Technically, 1 Kbyte area of ​​the main body and EEPROM
It is copied to virtual address area #C00 to #FFF.
For this reason, POKE puts in a vacant area of ​​the program (area behind #FFF) with a value
Save this value including SAVE,
After LOAD and LRUN this value can be retrieved with PEEK.
