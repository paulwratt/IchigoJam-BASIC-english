SAVE
IchigoJam BASIC 0.8.0～
IchigoJam BASIC RPi
IchigoJam PC 0.1 beta 5～
-----------------------------------------------------------
[Function]
Save the program.

[Command format]
SAVE [<program number>]

[Example]
SAVE 1

[Commentary]
The value of <program number> is 0 to 2 or 0 to 3 and
It is 100 to 226 or 100 to 227.

IchigoJam main body 0 to 2 up to 0.9.9 RC,
It corresponds to 0 to 3 from 1.0.0 beta. (Including IchigoJam PC)
The IoT compatible version is only 1.2b59 IoT and the body is only saved 0.
When omitted, it is 0 until 0.9.8 RC,
It becomes the program number which accessed latest from 0.9.9 RC.
If you omit it immediately after startup, save it to 0.

From 0.9.3, save to external EEPROM. 100 to 226 is valid.
Values ​​from 100 to 227 are valid from 0.9.9 RC.
Valid values ​​vary depending on the EEPROM capacity and wiring.
The program number that can not be used is File Error.

EEPROM can be used with 32K to 1024K bits,
When using 1024K bits with 0.9.9 RC and
Contents can be completely used except some EEPROM.
For the 32K to 256K bits the same program
Please be careful to refer with multiple program numbers.
Because there is a difference in the access of I2C for EEPROM of 16K bit or less,
It can not be used for saving programs.

IchigoJam BASIC RPi is 0 to 3 and 100 to 227 to 1.2b15 RPi · 1.2.4 RPi.
(micro) Save to the file in the files directory of the SD memory card.
It became 0 to 227 from 1.2b16 RPi and 1.2.5 RPi.
0 to 99 are SD memory cards, 100 to 227 are saved in EEPROM.

IchigoJam PC supports 0 to 3 body saving, but it is deleted when the power is turned off.

If you want to delete the saved program
By doing SAVE <program number> with NEW missing program,
Program of <program number> can be deleted.

Technically, virtual address areas #C00 to #FFF are copied to the main body / EEPROM area.
For this reason, POKE puts in a vacant area of ​​the program (area behind #FFF) with a value
By SAVE you can also save this value.
After LOAD and LRUN this value can be retrieved with PEEK.
